// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Env is an autogenerated mock type for the Env type
type Env struct {
	mock.Mock
}

// Update provides a mock function with given fields: key, value
func (_m *Env) Update(key string, value string) {
	_m.Called(key, value)
}

// Value provides a mock function with given fields: key
func (_m *Env) Value(key string) string {
	ret := _m.Called(key)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewEnv interface {
	mock.TestingT
	Cleanup(func())
}

// NewEnv creates a new instance of Env. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewEnv(t mockConstructorTestingTNewEnv) *Env {
	mock := &Env{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
